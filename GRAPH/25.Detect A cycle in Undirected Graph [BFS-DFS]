cyle detect in directed graph by khans algo "BFS"

class Solution {
  public:
  bool checkcycle(int s,int V,vector<int> adj[],vector<int>&vis){
      queue<pair<int,int>>q;
      vis[s]= true;
      q.push({s,-1});
      while(!q.empty()){
          int node= q.front().first;
          int par = q.front().second;
          q.pop();
          for(auto it:adj[node]){
              if(!vis[it]){
                  vis[it]= true;
                  q.push({it,node});
              }
              else if(par!=it){
                  return true; //checking the previous
              }
          }
      }
      return false;
  }
    // Function to detect cycle in an undirected graph.
    bool isCycle(int V, vector<int> adj[]) {
        // Code here
        vector<int >vis(V+1,0);
        for(int i = 1;i<=V;i++){
            if(!vis[i]){
                if(checkcycle(i,V,adj,vis)) return true;
            }
        }
        return false;
    }
};
tc o(n)
